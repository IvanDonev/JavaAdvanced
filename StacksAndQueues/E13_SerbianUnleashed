import java.util.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class E13_SerbianUnleashed {
    public static void main (String[] args){
        Scanner scanner = new Scanner(System.in);
        Map<String, Venue> concertList = new LinkedHashMap<>();

        String pattern = "(?<performer>[\\w ]*) @(?<venues>[A-Za-z ]*)(?<ticketPrice>[\\d]*) (?<tickets>[\\d]*)";
        Pattern regex = Pattern.compile(pattern);

        String input = scanner.nextLine();


        while (!input.equalsIgnoreCase("End")){
            Matcher matcher = regex.matcher(input);

            while (matcher.find()){
                String venue = matcher.group("venues");
                String performer = matcher.group("performer");

                int ticketPrice = Integer.parseInt(matcher.group("ticketPrice"));
                int amount = Integer.parseInt(matcher.group("tickets"));

                int totalPrice = ticketPrice * amount;

                concertList.putIfAbsent(venue, new Venue(venue));
                Performer currentPerformer = new Performer(performer, totalPrice);


                for (int i = 0; i <concertList.get(venue).performers.size(); i++) {
                    String currentName = concertList.get(venue).performers.get(i).name;

                    if (currentName.equals(performer)){
                        int previousSales = concertList.get(venue).performers.get(i).totalSales;
                        totalPrice += previousSales;
                        currentPerformer.totalSales = totalPrice;
                        concertList.get(venue).performers.remove(i);

                    }
                }

                concertList.get(venue).performers.add(currentPerformer);
            }

            input = scanner.nextLine();
        }

        concertList.values().stream().forEach(System.out::print);
    }

    private static class Venue{
        String name;
        List<Performer> performers;

        public Venue(String name) {
            this.name = name;
            this.performers = new ArrayList<>();
        }


        @Override
        public String toString() {
            StringBuilder output = new StringBuilder();
            output.append(this.name);
            output.append(System.lineSeparator());
            this.performers.stream().sorted().forEach(e -> {
                output.append(e);
            });
            return output.toString();
        }


    }

    private static class Performer implements Comparable<Performer>{
        String name;
        int totalSales;


        public Performer(String name, int totalSales) {
            this.name = name;
            this.totalSales = totalSales;
        }


        @Override
        public int compareTo(Performer otherPerformer) {
            int sort = Integer.compare(otherPerformer.totalSales, this.totalSales);
            return sort;
    }

        @Override
        public String toString() {
            return String.format("#  %s -> %d%n", this.name, this.totalSales);
        }
    }


}
